// Mocks generated by Mockito 5.4.6 from annotations
// in carbon_it_images_search/test/presentation/view_models/search_screen_view_model_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:carbon_it_images_search/data/entities/image_entity.dart' as _i4;
import 'package:carbon_it_images_search/domain/repositories/favorites_repository.dart'
    as _i5;
import 'package:carbon_it_images_search/domain/repositories/images_search_repository.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

/// A class which mocks [ImagesSearchRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockImagesSearchRepository extends _i1.Mock
    implements _i2.ImagesSearchRepository {
  @override
  _i3.Future<List<_i4.ImageEntity>> searchImages({
    required String? search,
    int? page = 1,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#searchImages, [], {
              #search: search,
              #page: page,
            }),
            returnValue: _i3.Future<List<_i4.ImageEntity>>.value(
              <_i4.ImageEntity>[],
            ),
            returnValueForMissingStub: _i3.Future<List<_i4.ImageEntity>>.value(
              <_i4.ImageEntity>[],
            ),
          )
          as _i3.Future<List<_i4.ImageEntity>>);
}

/// A class which mocks [FavoritesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockFavoritesRepository extends _i1.Mock
    implements _i5.FavoritesRepository {
  @override
  _i3.Future<void> saveImageToFavorites({
    required _i4.ImageEntity? imageEntity,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#saveImageToFavorites, [], {
              #imageEntity: imageEntity,
            }),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<void> removeImageFromFavorites({required int? imageId}) =>
      (super.noSuchMethod(
            Invocation.method(#removeImageFromFavorites, [], {
              #imageId: imageId,
            }),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);

  @override
  _i3.Future<List<_i4.ImageEntity>> getFavorites() =>
      (super.noSuchMethod(
            Invocation.method(#getFavorites, []),
            returnValue: _i3.Future<List<_i4.ImageEntity>>.value(
              <_i4.ImageEntity>[],
            ),
            returnValueForMissingStub: _i3.Future<List<_i4.ImageEntity>>.value(
              <_i4.ImageEntity>[],
            ),
          )
          as _i3.Future<List<_i4.ImageEntity>>);
}
